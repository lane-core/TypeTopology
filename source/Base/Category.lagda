Definition of Categories

\begin{code}

{-# OPTIONS --safe --without-K #-}

module Base.Category where

open import Prim.Prelude hiding (Hom)
open import Properties.Associative
open import Properties.Neutral
open import Properties.Set

\end{code}

A precategory ­ЮЊњ consists of a type of objects Ob(­Юњъ).

\begin{code}

record Precat (Ob : ­ЮЊњ ╠Є) (­ЮЊц : Universe) : ­ЮЊњ Ріћ ­ЮЊц РЂ║ ╠Є where
 field
  _РЪХ_ : Ob Рєњ Ob Рєњ ­ЮЊц ╠Є
  Hom-set : (x y : Ob) Рєњ is-set (x РЪХ y)
  _┬и_ : {x y z : Ob} Рєњ y РЪХ z Рєњ x РЪХ y Рєњ x РЪХ z
  unit : {x : Ob} Рєњ x РЪХ x
  unitr : {x y : Ob} (f : x РЪХ y) Рєњ f ┬и unit №╝Ю f
  unitl : {x y : Ob} (f : x РЪХ y) Рєњ unit ┬и f №╝Ю f
  Hom-assoc : {w x y z : Ob} (f : y РЪХ z) (g : x РЪХ y) (h : w РЪХ x)
        Рєњ f ┬и (g ┬и h) №╝Ю (f ┬и g) ┬и h

 infixr 8 _РЪХ_
 infixr 40 _┬и_

 hom : Ob Рєњ Ob Рєњ ­ЮЊц ╠Є
 hom = _РЪХ_

 hcomp : {x y z : Ob} Рєњ y РЪХ z Рєњ x РЪХ y Рєњ x РЪХ z
 hcomp = _┬и_

 hassoc : {w x y z : Ob} (f : y РЪХ z) (g : x РЪХ y) (h : w РЪХ x)
        Рєњ f ┬и (g ┬и h) №╝Ю (f ┬и g) ┬и h
 hassoc = Hom-assoc

 hsrc : {x y : Ob} Рєњ x РЪХ y Рєњ Ob
 hsrc {x} {y} h = x

 htgt : {x y : Ob} Рєњ x РЪХ y Рєњ Ob
 htgt {_} {y} h = y

 _рхњрхќ : Precat Ob ­ЮЊц  Рєњ Precat Ob ­ЮЊц
 _РЪХ_ (C рхњрхќ) x y = hom y x
 Hom-set (C рхњрхќ) x y = Hom-set y x
 _┬и_ (C рхњрхќ) g f = hcomp f g
 unit (C рхњрхќ) = unit
 unitr (C рхњрхќ) = unitl
 unitl (C рхњрхќ) = unitr
 Hom-assoc (C рхњрхќ) f g h = {!!}
   where
    _Рђб_ : {x y z  : Ob} Рєњ hom z y Рєњ hom y x Рєњ hom z x
    _Рђб_ g f = hcomp f g



open Precat

ob : {Ob : ­ЮЊњ ╠Є} Рєњ Precat Ob ­ЮЊц Рєњ ­ЮЊњ ╠Є
ob {_} {_} {Ob} _ = Ob

module _ {Ob : ­ЮЊњ ╠Є} where





\end{code}

for each object A:Ob(­Юњъ) and B:Ob(­Юњъ), a set Hom(A,B) of morphisms

\begin{code}

 -- private
 --  Hom-type : (a b : Ob) Рєњ ­ЮЊњ РЂ║ ╠Є
 --  Hom-type a b = Hom a b

\end{code}

for each object A:Ob(­Юњъ), B:Ob(­Юњъ), and C:Ob(­Юњъ), a binary function

  (Рѕњ)Рѕў[A,B,C](Рѕњ):Hom(B,C)├ЌHom(A,B) Рєњ Hom(A,C)

\begin{code}

 -- private
 --  hom-comp : {A B C : Ob} Рєњ Hom B C Рєњ Hom A B Рєњ Hom A C
 --  hom-comp p q = trans q p


\end{code}
